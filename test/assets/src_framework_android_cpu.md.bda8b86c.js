import{_ as a,h as e,i as r,R as i}from"./chunks/framework.7e07dabb.js";const p=JSON.parse('{"title":"CPU架构","description":"","frontmatter":{},"headers":[],"relativePath":"src/framework/android/cpu.md","filePath":"src/framework/android/cpu.md","lastUpdated":1692932276000}'),t={name:"src/framework/android/cpu.md"},l=i('<h1 id="cpu架构" tabindex="-1">CPU架构 <a class="header-anchor" href="#cpu架构" aria-label="Permalink to &quot;CPU架构&quot;">​</a></h1><h2 id="armeabi-v7a" tabindex="-1">armeabi-v7a <a class="header-anchor" href="#armeabi-v7a" aria-label="Permalink to &quot;armeabi-v7a&quot;">​</a></h2><ul><li>此 ABI 适用于基于 32 位 ARM 的 CPU，2016年之前大部分Android手机的cpu都是此架构。</li></ul><h2 id="arm64-v8a" tabindex="-1">arm64-v8a <a class="header-anchor" href="#arm64-v8a" aria-label="Permalink to &quot;arm64-v8a&quot;">​</a></h2><ul><li>此 ABI 适用于基于 ARMv8-A 的 CPU，支持 64 位 AArch64 架构，一般从2016年开始，主流Android手机的cpu架构都是arm64的。</li></ul><h2 id="x86" tabindex="-1">x86 <a class="header-anchor" href="#x86" aria-label="Permalink to &quot;x86&quot;">​</a></h2><ul><li>此ABI支持X86架构，像Intel、AMD的cpu都是基于此架构。 在2012-2016这段时间，为了赶上移动互联网的浪潮，Intel和Nvidia专门为Android手机和平板推出过X86架构的CPU，可惜都失败了。现在一般不需要适配此架构，除非APK需要安装在Intel平板上。</li></ul><h2 id="x86-64" tabindex="-1">x86_64 <a class="header-anchor" href="#x86-64" aria-label="Permalink to &quot;x86_64&quot;">​</a></h2><ul><li>此ABI支持x86-64位架构的CPU。同上</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>对于mips、mips64、armeabi这些架构来说，Android从Android Plugin for Gradle 3.1.0（对应gradle 4.4）后不再支持，因为从NDK r17开始，不再将这些 ABI 作为支持的目标。</p></div>',10),o=[l];function d(c,n,s,u,h,m){return e(),r("div",null,o)}const A=a(t,[["render",d]]);export{p as __pageData,A as default};
